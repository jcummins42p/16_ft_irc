# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    IRC_concepts_01_architectural.txt                  :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: jcummins <jcummins@student.42prague.com>   +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2024/11/28 16:25:16 by jcummins          #+#    #+#              #
#    Updated: 2024/11/29 15:58:56 by jcummins         ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

IRC Concepts: ARCHITECTURAL

A typical IRC network consists of servers and clients connected to those servers, with a good mix of IRC operators and channels

***SERVERS***
> Servers for the backbone of IRC, providing a point to which clients may connect and talk to each other, and a point for other servers to connect to, forming an IRC network.

> The most common netword configuration for IRC is that of a spanning tree where each server acts as a central node for the est of the network it sees. Other topologies are being experimented with, but right now there are none widely used in production.

> There have been several trems created over time to describe the roles of different servers of an IRC network. Some of the most common terms are:
	Hub: a server that connects to mulitple other servers.
	Core Hub: a hub server that connects faily major parts of the IRC network together. What is considered a core hub will change depending on the size of a network and what the administrators of the network consier important.
	Leaf: a server that is only connected to a single other server on the network. Typically, leafs are the primary servers that handle client connections.
	Services: A special type of server that extends the capabilities of the server software on the network (i.e. the provide services to the network). Services are not used on all networks, and the capabilities typically provided by them may be buil-into server software itself rather than being peovided by a separate software package. Features usually handled by services include client account registration (as are typically used for SASL authentication), channel registration (allowing client accounts to 'own' channels), and further modifications and extensions to the IRC protocol. 'Services' themselves are not specifies in any way by the protocol, they are different from the services defined by the RFCs. What they provide depends entirely on the software packages being run.

A trend these days is to hide the real structure of a network from regular users. Networks that implement this may restrict or modify commands like MAP so that regular users see every other server on the network as linked directly to the current server. When this is done, servers that do not handle client connections may also be hidden from users (hubs hidden in this way can be called 'hidden hubs'). Generally, IRC operators can always see the true structure of a network.

These terms are not generally used in IRC protocol documentation but may be used by the administrators of a network in order to differentiate the servers they run and their roles.

Servers SHOULD pick a name which contains a dot character (".", 0x2E). This can help clients disambiguate between server names and nicknames in a message source.

***CLIENTS***
A clinet is anything connecting to a server that is not another server. Each client is distinguiched from other clients by a unique nickname. In addition to the nickname, all servers muct have the following information about all clients: the real name/address of the host that the client is connecting from, the username of the client on that host, and the server to which the client is connected.

Nicknames are non-empty strings with the following restrictions:
	They MUST NOT contain any of the following characters:
		space 				' '
		comma 				','
		asterisk			'*'
		question mark 		'?'
		exclamation mark	'!'
		at sign				'@'
	They MUST NOT start with an y of the following characters:
		dollar				'$'
		colon				';'
	They MUST NOT start with a character listed as a
		channel type
		channel membership prefix
		prefix listed in the IRCv3 multi-prefix extension
	They SHOULD NOT contain any dot character '.'
Servers MAY have additional implementation-specific nickname restrictions and SHOULD avoid the use of nicknames which are ambiguous with commands or command parameters where this could lead to confusion or error.

***SERVICES***
Services were a different kind of clinets than users, defined in the RFC2812. They were to provide or collect information about the IRC network. They are no longer used now. As such the service-related messages SERVICE SERVLIST and SQUERY are also deprecated

***Operators***
To allow a reasonable amount of order to be kept within the IRC network, a special class of clinets (operators) are alllowed to perform general maintenance functions on the network. Although the powers granted to an operator can be considered as 'dangerous', the are nonetheless required.

the tasks operators can perform vary with different server software and the specific privileges granted to each operator. Some can perform network maintenance tasks, such as disconnecting and reconnecting servers as needed to prevent long-term use of bed network routing. Some operators can also remove a user from their server or the IRC network by 'force', i.e. the operator is able to close the connection between a client and server.

The justification for operators being able to remove users from the network is delicate since its abuse is both destructive and annoying. However, IRC network policies and administrators handle operators who abuse their privilege, and what is considered abuse by that network.

***CHANNELS***
A channel is a named group of one or more clients. All clients in the channel will recive all mesages addressed to that channel. The channel is created implicitly when the first client joins it, and the channel ceases to exist when the last clinet leaves it. While the channel exists, any clinet can reference the channel using the name of the channel. Networks that support the concept of 'channel ownership' may persist specific channels in some way while no clients are connecte to them.

Channel names are strings (beginning whit specified prefix characters). Apart from the requirement of the first character being a valid channel type prefix character; the only restriction on a channel name is that it may not contain any
	space character ' '		0x20
	control G/BELL	'^G'	0x07
	comma			','		0x2C	(because these are used as a list item separator by the protocol)

There are several types of channels used in the IRC protocol.
	regular channel # which is known to all servers that are connected to the network
	local channels & clients connected can only see and talk to others on the same server

Along with various channel types, there are also channel modes that can alter the characteristics and behaviour of individual channels.

To create a new channel or become part of an existing channel, a user is required to join the channel using the JOIN command. If the channel doesn't exist prior to joining, the channel is created and the creating user becomes a channel operator. If the channel already exists, whether or not hte client successfully joins that channel depends on the modes currently set on the channel. For example, if the channel is set to invit-only mode (+i), the client only joins the channel if they have been invited by another user or they have been exempted from requiring an invite by the channel operators.

Channels also contain a topic. The topic is line shown to all users when they join the channel, and all users in the channel are notified when the topic of a channel is changed. Channel topics commonly state channel rules, links, quotes from channel members, a general description of the channel, or whatever the channel operators what to share with the clients in their channel.

A user may be joined to serveral channels at once, but a limit may be imposed by the server as to how many channels a client can be in at one time. This limit is specified by the CHANLIMIT RPL_ISUPPORT parameter.

If the IRC network becomes disjoint because of a split between servers, the channel on either side is composed of only those clinets which are connected to servers on the respectivesides of the split, possible ceasing to exist on one side. When the split is healed, the connecting servers ensure the network state is consistent between them.

***CHANNEL OPERATORS***
Channel operators or "chanops" on a given channel are considered to 'run' or 'own' that channel. In recognition of this status, channel operators are endowed with certain powers which let them moderate and keep control of their channel.

Most IRC operators do not concern themselves with 'channel politics'. In addition, a large number of networks leave the management of specific channels up to chanops where possible, and try not to interfere themsleves. However, this is a matter of network policy, and it's best to consult the Message of teh Day when looking at channel management.

IRC servers may also define other levels of channel moderation. These can include 'halfop' (half operator), 'protected' (protected user/operator), 'founder' (channel founder), and any other positions the server wishes to define. These moderation loveles have varying privileges and can execute, and not execute, various channel management commands based on what the server defines.

The commands which may only be used by channel moderators include:
	KICK:	Eject a client from the channel
	MODE:	Change the channel's modes
	INVITE:	Invite a client to an invite-only channel (mode +i)
	TOPIC:	Chane the channel topic in a mode +t channel

Channel moderators are identified by the channel member prefix ('@' for standard channel operators, '%' for halfops) next to their nickname whenever it is associated with a channel (e.g. replies to the NAMES, WHO, and WHOIS commands).

Specific prefixes and moderation leveles are covered in the Channel Membership Prefixes section.
