Hi! =)

I'm working on this list right now, I do everything in my fork:
https://github.com/makayun/16_ft_irc
so I wont mess things up (I hope).
It doesn't work right now, still need to implement and polish some stuff, but you can take a look =)
So, here we go:

Makefile:
+ Add an -fsanitize=address flag, so we're aware of leaks and other problems

IRCServer.hpp:
+ Change the filename to Server.hpp or change Server.cpp to IRC...
+ We don't have a server password, in the subject:
		"Your executable will be run as follows:
		./ircserv <port> <password>"


IRCServer.cpp:
+ Again, add the password
+ Also, shouldn't the password be hashed? So we don't have am actual password in memory, only an encripted version?
	And then hash what the user passes and compare these encrypted things, for safety, yo know.
+ In NICK, USER and other commands we don't check for an empty input, so the name could be changed for nothing, for example.
+ In processMessage method - shouldn't we print a message if it wasn't a command?
- All channel logic should be in the Channel class, including admin rights checks (you can't kick someone if you're not an operator)
- PRIVMSG sends a message to a channel for some reason, but it should send to an exact client


Client.hpp:
+ Data should be private. And add getters/setters for what we need to read or change on the go
+ is_operator can't be here, there should be a list of admins in the Channel class
- Channels are still are still public, will get back to it later, after fixing channels themself

Client.cpp:
+ Again, add getters/setters for private data.
- Channels are still are still public, will get back to it later, after fixing channels themself


Channel.hpp:
+ Again, data can't be public. So, private section and getters/setters.

Channel.cpp:
+ How could be user_limit be -1? I'd set it to MAX_CLIENTS first and then an operator can change it.
+ Also, when user_limit is changed - we should check if it's <= MAX_CLIENTS.
+ Right now we have no checks for who is doing the action - again, only an admin (operator) can kick or change modes.
? Password should be hashed.
- Password is hashed now, but I have no idea how to ask users to enter it and how to check it, will work on it later


Overall:
- We need to add somehow this ctrl+D thing (the subject, page 6), I have no idea how to do it
? When the server is closed - the user should be at least informed about it somehow, maybe?
	Right now closing the server just cleans itself and that's it, but maybe I'm wrong.
- I added closing of clients' fds when the programm closes (well, I believe I added, please check it in the IRCServer destructor)
